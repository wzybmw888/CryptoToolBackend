# Generated by Django 4.2 on 2023-04-28 10:35

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models
import utils.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[(0, "普通用户"), (1, "管理员")],
                        default=0,
                        max_length=50,
                        verbose_name="角色",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        upload_to=users.models.user_avatar_path,
                        validators=[
                            utils.validators.FileValidator(
                                allowed_extensions=["png", "jpg", "jpeg"],
                                max_size=2097152,
                            )
                        ],
                        verbose_name="avatar",
                    ),
                ),
                (
                    "nickname",
                    models.CharField(
                        default=users.models.default_nickname,
                        max_length=30,
                        verbose_name="用户昵称",
                    ),
                ),
                ("phone", models.CharField(max_length=11)),
                (
                    "sign",
                    models.CharField(
                        default=users.models.default_sign,
                        max_length=50,
                        verbose_name="个人签名",
                    ),
                ),
                (
                    "info",
                    models.CharField(default="", max_length=150, verbose_name="个人简介"),
                ),
                (
                    "current_ip",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="用户当前ip地址"
                    ),
                ),
                (
                    "last_ip",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="用户上一次访问的ip地址",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户表",
                "verbose_name_plural": "用户表",
                "db_table": "user_profile",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserExchangeAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "exchange_name",
                    models.CharField(
                        choices=[("OKX", "OKX"), ("BINANCE", "BINANCE")], max_length=18
                    ),
                ),
                ("api_key", models.CharField(blank=True, max_length=64, null=True)),
                ("secret_key", models.CharField(blank=True, max_length=64, null=True)),
                (
                    "password",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="api密码"
                    ),
                ),
                (
                    "username",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usernames",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "用户交易所资金余额",
                "verbose_name_plural": "用户交易所资金余额",
                "db_table": "user_exchange_account",
            },
        ),
    ]
